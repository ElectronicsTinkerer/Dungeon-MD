$ This is an example Dungeon-Markdown document
$ All lines that start with a '$' are comments
$ It is preferable to keep all lines to fewer than 120 characters in length.
$ Also, note the filename's naming system. The coordinates of the Room are at the beginning,
$ each axis separated by a '.' followed by a description completed with the '.dmd' extension.

$ This indicates the coordinate that this particular 'room' is located
$ The Z axis starts at 0 for sea-level; positive is above sea-level and negative is below.
$ There is not practical limitation on the value of these numbers, aside from the hard limit
$ defined by Java's INT_MAX_VALUE and INT_MIN_VALUE
$ Also, this is an optional field since it is specified in the filename. In the event that this
$ differs, the filename takes precedence, but a warning should be sent to the program's event log.
$ FORMAT: @ X.Y.Z
@ 9.6.10

$ Next is the name of the 'biome' that the Room is located within.
$ This is useful for keeping track of various spells, objects, creatures, or other elements
$ of the game. There is no requirement for this to be implemented or used, but is recommended.
# Woodlands


$ This indicates the Room's 'title'.
$ Once again, this is useful for keeping track of elements such as a story line, but is
$ otherwise not required for implementation. (But still recommended)
## Stone Ruins Entrance

$ This specifies the locations of Objects in the Room.
$ This is where some (more) of the Markdown-relatedness breaks down:
$ To specify the description / text that the Player is given in addition to the text that
$ is auto generated by the program for each of the objects, start a line with '###'.
$ The description text then is enclosed in brackets '{}' and any whitespace characters
$ are ignored when the document is read by the program.
$ Single line descriptions still require the brackets enclosing the text.
### {
    The once worn-down stone path that leads to the small door is now overgrown by thickets, but some stones are still visible.
}
